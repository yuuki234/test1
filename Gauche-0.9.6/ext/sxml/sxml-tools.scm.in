;;;
;;; sxml.tools - utility to manipulate SXML
;;;
;;;   This file is mechanically translated for Gauche from
;;;   Kirill Lisovsky's sxml-tools.scm CVS revision 3.13
;;;   Public domain.
;;;

(define-module sxml.tools
  (use srfi-1)
  (use srfi-11)
  (use srfi-13)
  (use text.parse)
  (use sxml.adaptor)
  (export sxml:attr-list-node
          sxml:attr-as-list
          sxml:aux-list-node
          sxml:aux-as-list
          sxml:find-name-separator
          sxml:error
          sxml:empty-element?
          sxml:shallow-normalized?
          sxml:normalized?
          sxml:shallow-minimized?
          sxml:minimized?
          sxml:name
          sxml:element-name
          sxml:node-name
          sxml:ncname
          sxml:name->ns-id
          sxml:content
          sxml:content-raw
          sxml:attr-list-u
          sxml:aux-list
          sxml:aux-list-u
          sxml:aux-node
          sxml:aux-nodes
          sxml:attr
          sxml:num-attr
          sxml:attr-u
          sxml:ns-list
          sxml:ns-id->nodes
          sxml:ns-id->uri
          sxml:ns-uri->nodes
          sxml:ns-uri->id
          sxml:ns-id
          sxml:ns-uri
          sxml:ns-prefix
          sxml:change-content!
          sxml:change-content
          sxml:change-attrlist
          sxml:change-attrlist!
          sxml:change-name!
          sxml:change-name
          sxml:add-attr
          sxml:add-attr!
          sxml:change-attr
          sxml:change-attr!
          sxml:set-attr
          sxml:set-attr!
          sxml:add-aux
          sxml:add-aux!
          sxml:squeeze!
          sxml:squeeze
          sxml:clean
          select-first-kid
          sxml:node-parent
          sxml:add-parents
          sxml:lookup
          sxml:clean-feed
          sxml:attr->xml
          sxml:sxml->xml
          sxml:attr->html
          sxml:string->html
          sxml:string->xml
          sxml:non-terminated-html-tag?
          sxml:sxml->html
          ))
(select-module sxml.tools)

;; Override these by Gauche-specific versions.

;; We can use srfi-13 fn
(define-macro (sxml:find-name-separator len)
  `(string-index-right name #\:))

;; Error function.
(define (sxml:error . messages)
  (apply error "SXML Error: " messages))

;; nl is used in the arg of sxml:error to insert a newline, but
;; we don't really need it.
(define nl "")

;; These are defined in sxml.sxpath.  Since sxml.sxpath depends on
;; sxml.tools, we can't simply 'use' it.

(autoload sxml.sxpath
          sxml:attr-list nodeset? ntype-names?? ntype??
          sxml:filter select-kids sxml:element? sxml:element?)

;#include-body "src/sxml-tools.scm"

;; Local variables:
;; mode: scheme
;; end:
